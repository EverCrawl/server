// Generated by packetc v0.1.4 at Sat, 16 Jan 2021 12:36:39 +0000
#![allow(dead_code, non_camel_case_types, unused_imports, clippy::field_reassign_with_default)]
use std::convert::TryFrom;
#[derive(Clone, PartialEq, Debug, Default)]
pub struct Message {
    pub text: String,
}
pub fn read(reader: &mut packet::reader::Reader, output: &mut Message) -> Result<(), packet::Error> {
    let output_text_len = reader.read_uint32()? as usize;
    output.text = reader.read_string(output_text_len)?;
    Ok(())
}
pub fn write(writer: &mut packet::writer::Writer, input: &Message) {
    writer.write_uint32(input.text.len() as u32);
    writer.write_string(&input.text);
}
